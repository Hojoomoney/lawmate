plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'site.lawmate'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}
jar {
    enabled = false
}
bootJar{
    enabled = true
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}
ext {
    set('springCloudVersion', "2023.0.2")
}
dependencies {
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-tomcat:3.3.1'

    implementation group: 'org.jsoup', name: 'jsoup', version: '1.15.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    implementation 'org.apache.logging.log4j:log4j-api:2.23.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.23.1'

    runtimeOnly 'com.h2database:h2'
    implementation 'org.modelmapper:modelmapper:3.2.0'
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.1.0:jakarta"
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    compileOnly group: 'jakarta.servlet', name: 'jakarta.servlet-api', version: '6.1.0'
    implementation 'jakarta.validation:jakarta.validation-api:3.1.0'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'

    // Spring Security
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-client', version: '4.1.2'

    // config
    implementation 'org.springframework.cloud:spring-cloud-starter-config'

    // Iamport
    implementation group: 'com.github.iamport', name: 'iamport-rest-client-java', version: '0.2.23'
    implementation group: 'com.squareup.retrofit2', name: 'adapter-rxjava2', version: '2.11.0'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.11.0'
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.12.0'
    implementation group: 'com.squareup.retrofit2', name: 'converter-gson', version: '2.11.0'

    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'
}
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

configurations.configureEach {
    exclude group: 'commons-logging', module: 'commons-logging'
}

tasks.named('test') {
    useJUnitPlatform()
}

clean {
    delete file('src/main/generated')
}